<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[SQL总结（持更）]]></title>
    <url>%2F2018%2F09%2F22%2Fsql-summary%2F</url>
    <content type="text"><![CDATA[总结SQL常用语法和知识点 注意事项 命名规则 只能使用半角英文字母、数字、下划线(_)作为数据库、表和列的名称 名称必须以半角英文字母作为开头 名称不能重复 所有的列都必须指定数据类型 表格删除（drop table）后不能恢复 表格修改（alter table）后不能恢复 不能随便插入空行 WHERE子句要紧跟在FROM子句之后 单引号和双引号要看数据库语言，一般是单引号 所有包含 NULL 的计算，结果肯定是 NULL 字符串类型的数据原则上按照字典顺序进行排序，不能与数字的大小顺序混淆 AND 运算符的优先级高于 OR 运算符。想要优先执行 OR 运算符时可以使用括号 基本数据类型 数字型 INTEGER型 字符型 CHAR型（最大长度)：CHAR(10), CHAR(200) 定长字符串，不到最大长度时用半角空格进行补足 VARCHAR型 可变长字符串，不会补足 日期型 DATE型 约束 (constrain) NOT NULL约束： 1product_id char(4) not null, 主键约束： 1PRIMARY KEY (product_id) 数据库的创建(CREATE DATABASE语句)12CREATE DATABASE &lt;数据库名称&gt;;create database shop; --将数据库命名为 shop 表的创建(CREATE TABLE语句)1234567891011121314151617CREATE TABLE &lt;表名&gt;( &lt;列名1&gt; &lt;数据类型&gt; &lt;该列所需约束&gt;， &lt;列名2&gt; &lt;数据类型&gt; &lt;该列所需约束&gt;， &lt;列名3&gt; &lt;数据类型&gt; &lt;该列所需约束&gt;， &lt;列名4&gt; &lt;数据类型&gt; &lt;该列所需约束&gt;，&lt;该表的约束1&gt;， &lt;该表的约束2&gt;，......);--举例create table Product( product_id char(4) not null, product_name varchar(100) not null, sale_price integer , purchase_price integer , regist_date date , primary key (product_id)); 表的删除(DROP TABLE语句)12DROP TABLE &lt;表名&gt;;drop table Product; --删除Product表格 表定义的更新(ALTER TABLE语句)添加列的ALTER TABLE语句12ALTER TABLE &lt;表名&gt; ADD COLUMN &lt;列的定义&gt;;alter table Product add column product_name_pinyin varchar(100); --添加商品名称(拼音)列 删除列的ALTER TABLE语句12ALTER TABLE &lt;表名&gt; DROP COLUMN &lt;列名&gt;;alter table Product drop column product_name_pinyin; --删除商品名称(拼音)列 变更表名1ALTER TABLE Poduct RENAME TO Product; -- Oracle and PostgreSQL 通常用rename &lt;变更前名称&gt; &lt;变更后名称&gt;，但是不同数据库语法不同。 添加数据123456-- SQL Server &amp; PostgreSQL 插入数据Begin transaction; -- 开始插入行的指令语句（看数据库语言而定）insert into Product values ('0001', 'T-shirt', 'Clothing', 1000, 500, '2009-09-20');insert into Product values ('0006', '叉子', '厨房用具', 500, null, '2009-09-20');commit; -- 确定插入行的指令语句 查询SELECT 语句基础查询部分12SELECT &lt;列名&gt;，...... FROM &lt;表名&gt;;select product_id, product_name, purchase_price from product; 执行结果 查询全部12SELECT * FROM &lt;表名&gt;;select * from Product; 执行结果 为列设定别名（AS 关键字）1234--错误的--select product_id, product_name, purchase_price as id, name, price from Product;--正确的，每一个别名都要用asselect product_id as id, product_name as name, purchase_price as price from Product; 执行结果12--书写常数 - 字符串、数字、日期select 'product' as string, 38 as number, '2009-08-28' as date, product_id, product_name from product; 执行结果 在结果中合并重复的（DISTINCT关键字）1select distinct product_type from Product; 执行结果12-- null也会被合并select distinct purchase_price from Product; 执行结果1234-- 多列合并，被选择的列中重复的会被合并-- DISTINCT只能用在第一个列名之前。-- 列名用逗号隔开select distinct purchase_price, regist_date from Product; 执行结果 根据 WHERE 语句来选择记录12345SELECT &lt;列名&gt;, ......FROM &lt;表名&gt;WHERE &lt;条件表达式&gt;;-- 举例select product_name, product_type from Product where product_type = '衣服'; 执行结果 算术运算符和比较运算符算术运算符12-- *: 乘法select product_name, sale_price, sale_price * 2 as "sale_price_x2" from Product; 执行结果 比较运算符和～相等：=和～不相等：&lt;&gt;大于等于：&gt;=大于：&gt;小于等于：&lt;=小于：&lt; 比较数字123select product_name, product_type, sale_price from Product where sale_price = 500; 比较计算结果123select product_name, sale_price, purchase_price from Product where sale_price - purchase_price &gt;= 500; 比较日期1234-- 选取出登记日期在2009年9月27日之前的记录select product_name, regist_date from Product where regist_date &lt; '2009-09-27'; 执行结果 比较字符串123-- 表格里有'1', '2', '3', '10', '11', '22'select chr from Chars where chr &gt; '2';-- output: '3', '22' 字符串类型的数据原则上按照字典顺序进行排序，不能与数字的大小顺序混淆。 NULL123456789101112131415161718192021222324-- 选取null - IS NULLselect product_name, purchase_price from Product where purchase_price is null;/* 运算符对null无效select product_name, purchase_price from Product where purchase_price = null;*/-- 选取非null - IS NOT NULLselect product_name, purchase_price from Product where purchase_price is not null;/* 运算符对null无效select product_name, purchase_price from Product where purchase_price &lt;&gt; null;select * from Product where purchase_price &gt; null;*/ 逻辑运算符否定：NOT并且：AND或者：OR12345678-- AND（所有条件都满足）select product_name, purchase_price from Productwhere product_type = '厨房用具'and sale_price &gt;= 3000;-- OR （满足其一）select product_name, purchase_price from Productwhere product_type = '厨房用具'or sale_price &gt;= 3000; AND 运算符的优先级高于 OR 运算符。想要优先执行 OR 运算符时可以使用括号。举例：“商品种类为办公用品” 并且 “登记日期是2009年9月11日或者2009年9月20日”1234select product_name, product_type, regist_date from Productwhere product_type = '办公用品'and regist_date = '2009-09-11'or regist_date = '2009-09-20'; 执行结果由于AND运算符优先于OR运算符，上面语句其实是「product_type = ‘办公用品’ AND regist_date = ‘2009-09-11’」OR「regist_date = ‘2009-09-20’」需要用()使OR优先级提前1234select product_name, product_type, regist_date from Productwhere product_type = '办公用品'and (regist_date = '2009-09-11' or regist_date = '2009-09-20'); 执行结果]]></content>
      <categories>
        <category>Coding</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我该如何管理自己的拖延症]]></title>
    <url>%2F2018%2F09%2F16%2Fbeat-procrastination%2F</url>
    <content type="text"><![CDATA[拖延症差点要了我的命。写这篇文章主要是记录自己关于拖延症的经历，有好的，也有坏的。总结出来希望自己以后学会管理拖延症，而不是一味地惧怕它逃避它。 拖延事迹在布里斯托读研的时候，很多课好难好费时间。比如“Character Design”，不会用Maya，非常犯怵。还有Robotics，不会Matlab。没换毕设项目之前，旧项目的文献综述怎么写都写不出来，没有激情做这个项目（详情请看“自我反思——为什么要改毕设项目”）。我现在还记得复活节假期最后三天我开始动笔写文献综述，其他时间全在看电视剧。 拖延症坏处荒废了一天后晚上绝对睡不好。尤其是躺在床上的时候，满脑子在想“我今天又啥都没干”，“怎么办好后悔”。睡不好，第二天就没精神。没精神，就不会进入到工作状态，于是又开始在B站刷视频。然后这一天又没效率了。这简直就是一个恶性循环。睡不好觉还会带来很多负面影响，比如皮肤差、没胃口、脾气火爆等。 最严重的就是越靠近截止日期就越焦虑，非常不好受，仿佛对人生失去了乐趣。为了按时完成作业，很有可能要熬夜。最高记录是熬夜到了凌晨4点，一次是做动画，两次是写论文。第二天起床脑子都是懵的。对大脑伤害太大了。 为什么拖着不做事我拖延的事情有一些共同点：1）对于我太难，我不会做；2）我会做，但是特别耗时间，要慢工出细活。 对于第一种，应对办法估计只有学了。因为太难，所以没兴趣，犯怵。但是当入了门后，基本上就不犯怵了。比如在Character Design之后的课程Animation Design，也要用Maya，而且还要用更多更复杂的功能，这个作业就完全没有拖延，因为我会（而且做起来很有趣）。当时非常享受当初寒假在宿舍和实验室做动画的每一天。当然，这有时候也跟老师或者任何自己寻求帮助的人有关。如果老师有耐心，愿意带着入门，或者愿意花时间解答疑问，那慢慢地就培养了自信了。老师也不局限于学校的老师，也可以是各种教程，比如Maya就是靠看YouTube上的教程学会的。另外一门课，Server Software，对我也很难。又是C语言，我不会；又是讲各种服务器算法的，完全听不懂。幸亏这门课的老师，Sion，他对我们太好了，他就像一个天使一样帮我理解各种算法。要不是Sion，我估计又一直拖着作业不写了。 对应第二种，其实没有研究出特别好的应对方法。目前看来，一鼓作气还是很有效的。如果有可能，争取单独拿出一大块时间专供这个内容，把它解决掉。比如做动画的时候，我知道花的时间会很长（一个寒假），要想做好，不能拖到最后关头。于是我没日没夜地做，中间不让其他事情打岔，这样在那段时间里脑子只集中在一件事情上，不用暂停下来去想别的事情，所以效率比较高。对于以上两种问题还有一个辅助解决的办法，就是找个朋友或者搭档一起做，当然前提是不能找猪队友。两个人或多人互相监督学习，互相帮助。但是有时候也会分心，不能专注于自己手里的活。所以，这个方法基本靠缘分。 没有截止日期的怎么办上面那些基本上都是有截止日期的。有一些事情没有截止日期，比如更新这个博客，自学别的语言，锻炼身体，学习做饭等等。这些事情更多的还是靠自己的自制力和恒心。这里我暂时还没想好怎么解决。 总结 对拖延症的认识：不要害怕，主要要找清楚为什么自己会拖着不做事。 所以为什么拖延？ 太难了，我不会做。=&gt; 学，找人帮忙：互联网，老师，朋友，父母 耗时间，我不想做。=&gt; 找一个大块时间，一鼓作气做完。中间不让别的事情打岔，高度集中注意力，相信自己完全能做好，并且做完了后成就感爆棚。随缘方法：找个搭档，互相帮助，互相监督。 在TED上看了一个关于“拖延症是什么”的演讲，很幽默，推荐一看：Tim Urban|TED2016, Inside the mind of a master procrastinator]]></content>
      <categories>
        <category>Reflection</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[庆祝朝外20周年校庆——印象最深刻的20件事（并没有朝外饭）]]></title>
    <url>%2F2018%2F07%2F11%2Fcfls20thceremony%2F</url>
    <content type="text"><![CDATA[今年（2018年）是我中学北京市朝阳外国语学校20周年校庆。非常遗憾无法回国参加典礼，只能在这里抒发一下感情啦～已经从朝外毕业5年了，有些事情还是忘不掉。今天来盘点一下朝外生活中让我印象深刻的20件事情。这个排名完全个人向。没有出现任何人的真名。以下排名不分先后～ 高考成绩说得过去录取志愿是中国农业大学的生命科学专业，不过因为准备出国了所以就没去报道。成绩说起来我还是比较欣慰的，各科考得也还行。高考毕竟是高中生活中最重要的事情嘛，这个分数也是没有辜负朝外老师们的栽培～给你们比心～ 我居然也能考（班级）第一名真的是，高一高二从来没考过第一名。那时候还没分班，四班好几个学霸，当时我物理、生物、地理、化学是真的学不明白。当时跟土世的日常对话就是 我：这地理题我怎么又看不懂呢！(◞‸◟ )土世：诶这些都是常识！╮(￣⊿￣)╭ 说实话当初第一次分班（我记得好像分班了不止一次吧。。。），看着原先四班的几个关系要好的同学（毛哥，小懿还有土世他们）去了二班，蔷去了文科班，心里挺不是滋味的。就是有一种聪明的人都在努力，而我没有天分还不努力的感觉。后来到了高三也不知道怎么就突然考好了。๑乛◡乛๑大致想一下，可能有这几个因素吧。首先我最差的科目是物理。我当初为什么会进到物理A层！力学还考了不及格。。。还是物理C层的节奏适合我。其次是数学被分到了A层。这个也让我非常震惊。当时的考试成绩我是达不到A层的标准的。不过孔老师教的很好，A层学习氛围超棒。我还记得我旁边坐的大黄和猫猫～好像是导数的部分学得比较透彻，数学分数也就上去了。最后一个呢，我猜是因为我们的生物李老师。哇塞这位老师不一般，他一来讲题的思路把我都镇住了，“原来这题是这么理解的？！套路这么深？！”。就是这位老师启发了我去读生物。（哇不过很可惜我没有真的读生物）对，就是这样把短板解决掉后，我的分数一点一点往上爬咯～考第一还是很爽的，虽然只是班级第一，我们四班也是很普通的班级，但是架不住我蝉联了几次大考啊哈哈哈哈。有个同学（二班的）还在我同学录上说我朝阳二模的成绩把他吓到了2333333 交到了好朋友～哇友谊果然是需要时间来检验的。去英国之前的暑假和几个同学玩地特别特别开心，其中两个人还凑成了一对儿（祝福～），还有人变帅了好几倍，还有人横向长了（好几倍）。。。仙女和蔷还带我去吃过农大的饭。如果我没出国就还能跟他们再做至少四年同学了(ू˃̣̣̣̣̣̣︿˂̣̣̣̣̣̣ ू)还有些同学，当初是很玩得来的朋友，结果时间长了就淡了感情，比较可惜。当然也对一些人“刮目相看”，又是拉黑又是互删的23333 毕业典礼，我们的“班级之最”毕业典礼之前老师说每个班准备个视频啊放一放，比如评选个”班级之最”啊。于是在某个周末，去学校上自习的时候跟同在的几个同学（完全个人向地）评选出四班所有人的“最”。视频最后是脚趾做的，我就出了出点子。视频还是很有纪念意义的，还包含各科课代表、任课老师、班干部～部分同学的评语不太恰当，有开玩笑的成分，忘了毕业典礼当天有家长在。当时我们没有考虑清楚，非常抱歉。 “高三是一座高山（sān）”兰老师的名言 周末干什么？去学校上自习啊！不知道从什么时候开始周末去学校上自习的。当然是不是真的专注于自习就不知道了哈哈哈。不过还挺有意思的，感觉跟现在我周末去上自习体会差不多。(▰╹◡╹▰) 十八岁生日2013年生日是个周末。当天去学校上自习还收到了同学们送的礼物。其中有一个闹钟，上面有一个板子可以拿荧光笔写字。早知道那个字那么容易掉我就收起来不摆在床头了。 高三的时候下大雪了那次下雪特别大。我记得课间操和课间大家都跑出去玩雪了。打雪仗啊堆雪人，特别开心，然后回来接着上物理课。 为了考800米学跆拳道高中都时候开始练跆拳道了。。。。。练到了红带就暂停了。下一级是黑带，但是需要集训，所以高考完后都暑假才考了黑带。事实证明练练跆拳道还是有用的，后来体育课跑步比以前快多了。我觉得我名字写在黑带上非常好看，金色字黑色底哈哈。（耳边想起辉哥嘹亮的口号：“5！4！3！2！1！”）┏(｀ー´)┛ 提到体育会考就不得不提我的篮球师父！哇我的篮球师父可了不得。真的，没他教我那些考试的技巧我估计体育会考篮球过不了。还因为篮球太难了哭过鼻子= =我还记得有同学安慰我让我慢慢学哈哈 齐老师经常给我们放电影语文课上齐老师经常放电影，比如《霸王别姬》、《死亡诗社》、《活着》、《乌龟也会飞》（当初好像是叫《会飞的乌龟》？）、《美丽人生》和《鬼子来了》。齐老师说这些电影看完后会有一种心里堵的感觉，这种感觉我当初很不适应，觉得就是鲁迅说过的“悲剧就是把美好的东西打碎给人看”，看完后几天心里都不舒服，一直想叹气。但是现在来看，这些电影帮我树立了一个优秀电影的标杆。没有让我在十几岁的时候沉浸在各种傻白甜的偶像剧里。因为老师潜移默化地帮我树立起正确的三观，现在能辨别什么是好的，有深度的电影。当初的语文课除了学习语文外，也是对艺术理解能力的培养。 日记。。。高一的时候跟蔷坐同桌经常互相换着看日记。我日记还其他人偷看过，哼！Ծ‸Ծ 短发初中和高中的几年按照校规保持短发。现在头发长了，反而怀念之前洗头5分钟就好。前几天想剪短发，我妈说，“你别剪，不适合，你脸大。” 我一直不会跳大绳对。。。我也很奇怪为什么我就是不会，真的是不会。那个节奏掌握不好，还怕被抽= =曾经因为不想参加跳绳比赛我又不争气地哭鼻子了。 齐老师开的玩笑语文课。打铃了齐老师还没到。蔷去找。但一会之后齐老师到了蔷没回来。。。不过一分钟后也就回来了。齐老师说，本来想让大家全都跑出去，蔷回来后发现班里没人，然后第二天蔷问时就说“诶？我们当时分明都在教室里啊！”吓死她～～～ᕕ( ᐛ )ᕗ 蔷最搞笑的一次高一的某天，蔷从书包里拿出充电器，默默地把两个插头冲土世，土世不明白她什么意思，于是用一只手指头小心翼翼地碰了两个插头。蔷让他把手心放在插头上，土世照做。“嗞——～～～”手抖做给土世通电状。当时周围人瞬间笑喷了哈哈哈哈哈。。。 人人网说起人人网，感觉是很久远的事情。不过人人确实是高中大部分时光的记录载体。（互联网科技这些，更新速度太快！） 社会实践著名的社会实践，诞生过很多有意思的照片哈哈哈。社会实践去过的很多地方都很有意思，已经很久很久没有体会一大帮人热热闹闹出去玩了呢（叹气）。 郝校长找我谈话郝校长好像找我谈过话。。。但是具体内容记不清了。。。也许是因为对她的原始恐惧。。。(⌯˃̶᷄ ⁻̫ ˂̶᷄⌯) 作为朝外毕业生很自豪虽说高中时代对于我现在这个研究生阶段来说显得遥远，一般人们顶多问一下本科是哪里。但是我可以非常肯定地说，朝外给了我良好的教育，跟我家的家教相辅相成。无论是朝外的品格教育，还是严厉又慈爱的老师们，都帮助我心智走向成熟。我能走到今天，离不开朝外。 怀念我的朝外生活！祝母校二十岁生日快乐！]]></content>
      <categories>
        <category>Reflection</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[JavaScript Objects]]></title>
    <url>%2F2018%2F05%2F10%2FJavaScript-Objects%2F</url>
    <content type="text"><![CDATA[How to create objects and use them in JavaScript. Objects Summary Every JavaScript object has a prototype property, which makes inheritance possible in JavaScript. The prototype property of an object is where we put methods and properties that we want other objects to inherit; When a certain method (or property) is called, the search starts in the object itself, and if it cannot be found, the search moves on the object’s prototype. This continues until the method is found: prototype chain. Below I create an example of adding, finding and deleting students with the Student object.1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980let student_info_controller = (function()&#123; //Create an object let Student = function(first_name, year_of_birth, student_id) &#123; this.first_name = first_name; this.year_of_birth = year_of_birth; this.student_id = student_id; &#125;; //Create an array to store the information let student_data = []; return &#123; //Add a new student add_student: function(new_first_name, new_year_of_birth)&#123; let new_student, new_id; //If the array is not empty if(student_data.length &gt; 0) //New id is the last one + 1 new_id = student_data[student_data.length - 1].student_id + 1; else new_id = 0; //Create a new student instance new_student = new Student(new_first_name, new_year_of_birth, new_id); student_data.push(new_student); return new_student; &#125;, does_exist_student: function(student_name)&#123; for(let i = 0; i &lt; student_data.length; i++) &#123; if (student_data[i].first_name === student_name) &#123; return student_name + " is in the system."; &#125; &#125; return student_name + " is not in this system." &#125;, //Return the student id by name. If not found, return -1 find_student_id: function(student_name)&#123; for(let i = 0; i &lt; student_data.length; i++) &#123; if (student_data[i].first_name === student_name) &#123; return student_data[i].student_id; &#125; &#125; return -1; &#125;, //Delete student by id delete_student_by_id: function(student_id)&#123; let ids, index; //Use 'map' to create a new array. Because ids are in the same format of index numbers (int). ids = student_data.map(function(current)&#123; return current.student_id; &#125;); index = ids.indexOf(student_id); if(index !== -1) student_data.splice(index, 1); //use splice to delete item &#125;, print_all_students: function()&#123; return student_data; &#125; &#125;&#125;)();student_info_controller.add_student('Tracy', 1995);console.log(student_info_controller.print_all_students());// -&gt; Student &#123;first_name: "Tracy", year_of_birth: 1995, student_id: 0&#125;console.log(student_info_controller.add_student('Mary', 1995));console.log(student_info_controller.does_exist_student('Mary'));// -&gt; Mary is in the system.student_info_controller.delete_student_by_id(student_info_controller.find_student_id('Mary'));console.log(student_info_controller.does_exist_student('Mary'));// -&gt; Mary is not in this system.]]></content>
      <categories>
        <category>Coding</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[自我反思——为什么要改毕设项目]]></title>
    <url>%2F2018%2F05%2F07%2Fmaster-project%2F</url>
    <content type="text"><![CDATA[今天再一次跟院校老师确认后，我的毕设项目终于可以改成关于自动博物馆向导了。这里面有一些教训。 起始一开始，在大概9，10月份的时候，我就开始找Tutor问有什么项目。当时还没有那个长长的列表。我要是后来知道有个列表，应该会更慎重地选项目。当时我的大方向是人机交互（HCI），如果能跟金融经济沾边更好。因为我以后想在这方面找工作。也是巧，Tutor和教我互联网经济的老师一个办公室。我的这位经济老师之前有做过一个项目————比较人类和机器人做市场交易的行为和效率。Tutor和我说，经济老师用的软件（或者说平台）是他们组自己写的。里面可能有一些HCI相关的，比如说通过改善界面，提高人们的交易效率。Tutor说，如果我将来想进金融，这是一个可以讲的故事，证明我对金融感兴趣云云。我当时一听，觉得不是很难，对我以后找工作也许有帮助，于是就答应了下来。这时候算算进度，我比同学们大概早了1-2个月就定了项目。后来到了11月，12月左右，列表公布了。同学们开始找老师找项目。我当时暗自庆幸早早定了项目，那个列表根本没有细看。印象很深的是，当时有同学在犹豫项目，我眉飞色舞地说了自己是怎么定下来项目的。现在想想，真的是蠢得可以。这个蠢，主要是指我自我认识不到位，有一些方式方法后来才明白。 怀疑大概3，4月份，我们都开始写Research Review。这个时候我发现了问题。我当时的方向主要是“如何通过交互设计降低交易软件带给交易员的压力，从而提高他们的交易效率，最终获得更高的利益”。我当时的思路是，找到压力点，看如何通过交互设计来降低这些压力，最后可以提出一些着重金融交易方面的设计准则。所以找了关于“Technostress（指科技带来的压力）”、交易员压力来源、各种设计方式方法的文献。我当时的疑虑主要集中在“我究竟能带来什么贡献？”这个问题上。因为我当时的理解是，哪怕我最后提出了一些设计准则，改善了老师的金融交易平台设计，这些对于真正的金融产品作用并不大。因为我无法知道真正的交易员的情况，无法知道真正的金融交易平台有什么问题。因为心存疑虑和自我怀疑，最终Research Review写得不尽人意。我现在很担心得分。 转折第一个转折点出现在Research Review之后，我瞎看列表的时候。当时只是好奇，还有什么项目没有。列表了关于HCI的有一个“自动博物馆向导”，碰巧是同一个导师的。当时看了看，感觉很有意思。后来和父母商量了一下，他们也很喜欢，尤其是我爸爸。于是我准备找导师谈话。碰巧我去找导师的那天他不在办公室，于是我去找了Tutor。第二个转折点就是我主动找了Tutor谈话。Tutor点明了我一点，就是这些学术研究，尤其是HCI里研究界面的，基本上不可能去真正的观察用户、体验产品。因为花销很大，很麻烦。Tutor建议我换个方向。从“重新设计界面”改成“哪些界面元素（比如图表）可以降低压力，提高效率”。这样的话，实验设计就变成了控制单一变量，分别设计多个界面，每个界面在原有界面基础上有且只有一个新加的元素。如果按照这样的设计，会比原来的简单一点，也更清晰。我后来和朋友谈论的时候，朋友说，听起来更简单，像Web Technologies的作业。其实，我也有同样的感受。Tutor是非常不建议我换项目的。她觉得我这几个月写Research Review的时间都白费了。但是严格来说，如果我按照她说的换了方向，其实也要重新写的。只不过，博物馆的项目听起来更有趣。又过了几天，我终于得以和导师谈话。导师跟我详细说了这个博物馆项目的思路，跟我想的有点出入，但是还好，还是很创新的一个项目。导师同时也提出了对金融交易平台项目的一个怀疑，同时也是我疑虑的。就是有些设计元素是相辅相成，不能简单地单一而论。如果要做得完善，需要考虑很多的组合可能（简直像排列组合问题），这就增加了很多不确定性。确实是一个硬伤。导师最后跟我达成了一致，如果院校同意我换，就换（前提是我先咨询父母的意见）。 落定就在上周，我发了好几封邮件问院校老师，说明我的理由。院校老师一开始不同意的。后来他们知道了我导师很支持我，才爽快地同意了我换。现在我的任务很艰巨了。Research Review要重新写啦。 总结这几天下来，我总结了一下经验。 自己定的项目，有一定的风险。经验上，不如学校的老师，他们已经有一些研究背景，可以指导学生。时间上，自己定的项目有很多风险没有考虑，一个暑假的时间很有可能不够。这是一个自我认知的过程。不反对创新，但是同时要考虑经验积累、时间、精力这些硬性要求。 多和老师沟通。很庆幸我遇到的老师都是好老师，愿意听我说我的烦恼和疑虑，愿意帮助我，指导我。这让我愿意离开舒适区，有所突破。 多和父母沟通。有时候太独立，就成了一意孤行，会走很多弯路。本科的时候我很少很少和父母谈心，主要是本科也没遇到什么特别大的困难。这几次和父母沟通，受益颇深。我爸爸对科技和人文社会的综合考虑比我要深入很多。他从很多其他角度来帮我分析，这来源于他这好几十年的工作经验和阅历。这点我望尘莫及。爸爸的话也坚定来我换项目的意愿。 这个事情算是很珍贵的一次经历。人生要面临大大小小无数个选择。每个选择都能导致不同的结局。庆幸的是，我还来得及改选择，并且能从中学到一些经验。希望下一次我做重大选择的时候，能够不骄不躁，脚踏实地，慎重考虑。]]></content>
      <categories>
        <category>Reflection</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[JavaScript Cheat Sheet 1]]></title>
    <url>%2F2018%2F05%2F04%2FJavaScript-Cheat-Sheet%2F</url>
    <content type="text"><![CDATA[This is my cheat sheet 1 of JavaScript covering 1) operators 2) basic functions of string, arrays and objects 3) JSON. The source code comes from Chapter 1 - 4 of eloquentjavascript.net. Values, Types, and OperatorsExponent: add an e 2.998e8 which is 2.998 * 10^8 backslash () \n newline, \t tab “A newline character is written like “\n”.” 1"A newline character is written like \"\\n\"." ${} template literals “half of 100 is 50”. 1"half of 100 is $&#123;100 / 2&#125;" The result in {} will be computed, converted to a string, and included at that position. typeof1234console.log(typeof 4.5);// -&gt; numberconsole.log(typeof "x");// -&gt; string Logical Operators || has the lowest precedence, then comes &amp;&amp;, then the comparison operators (&gt;, ==, and so on), and then the rest. 12console.log(1 + 1 == 2 &amp;&amp; 10 * 10 &gt; 50);// -&gt; true Ternary Operator / Conditional Operator The value on the left of the question mark “picks” which of the other two values will come out. When it is true, it chooses the middle value, and when it is false, it chooses the value on the right. condition ? if true, return me : if false, return me 12345678console.log(true ? 1 : 2)// -&gt; 1console.log(false ? 1 : 2)// -&gt; 2let age = 26;let isAdult = (age &gt;= 18) ? "True, over 18" : "False, under 18";console.log(isAdult);// -&gt; "True, over 18" Program StructureBreaking out of a loop 1234567for (let current = 20; ; current = current + 1) &#123; if (current % 7 == 0) &#123; console.log(current); break; &#125;&#125;// → 21 Switch Statements 12345678910111213switch (prompt("What is the weather like?")) &#123;case "rainy": console.log("Remember to bring an umbrella."); break;case "sunny": console.log("Dress lightly.");case "cloudy": console.log("Go outside."); break;default: console.log("Unknown weather type!"); break;&#125; FunctionsArrow Functions The arrow comes after the list of parameters and is followed by the function’s body. It expresses something like “this input (the parameters) produces this result (the body)”. 123456789101112//Multiple parametersconst addition = (num1, num2) =&gt; &#123; return num1 + num2;&#125;;//Only one parameterlet cube1 = (x) =&gt; &#123;return x * x * x&#125;;//Single expression in the bodylet cube2 = x =&gt; x * x * x;//No parametersconst horn = () =&gt; &#123; console.log("Toot");&#125;; Data Structures: Objects and ArraysDefine Arrays123let list_of_numbers = [1, 2, 3, 4];console.log(list_of_numbers[0]); // -&gt; 1console.log(list_of_numbers[3]); // -&gt; 4 PropertiesThere are two ways accessing the properties: dot and brackets. Dot: value.colorIf wants to know the property. Brackets: value[i], value[2], value[“John Doe”] The expression between the brackets is evaluated to get the property name.So if you want to access a property named 2 or John Doe, you must use square brackets: value[2] or value[“John Doe”]. Some methods of string and array objectslength 1console.log(list_of_numbers.length); // -&gt; 4 toUpperCase, toLowerCase 123let str = "This is a line."console.log(str.toLowerCase()); // -&gt; this is a line.console.log(str.toUpperCase()); // -&gt; THIS IS A LINE. Push in Arrays 12list_of_numbers.push(99); // -&gt; [1, 2, 3, 4, 99]list_of_numbers.pop(); // -&gt; 99 shift, unshiftshift: removes and returns the first element from the arrayunshift: inserts the given value to the start of the array, return the updated length12345console.log(list_of_numbers); //-&gt; (4) [1, 2, 3, 4]console.log(list_of_numbers.shift()); // -&gt; 1, the first element is removedconsole.log(list_of_numbers); // -&gt; (3) [2, 3, 4]console.log(list_of_numbers.unshift(-1)); // -&gt; 4, the new lengthconsole.log(list_of_numbers); // -&gt; (4) [-1, 2, 3, 4], inserts -1 at the beginning indexOf, lastIndexOfstring.indexOf(searchValue, start);string.lastIndexOf(searchValue, start);Note: for string searches, these two methods are case sensitive.searchValue: Required. The element to search forstart: Optional. Default 0. At which position to start the search12console.log([-1, 0, 1, 2, 3, 0].indexOf(0)); // -&gt; 1console.log([-1, 0, 1, 2, 3, 0].lastIndexOf(0)); // -&gt; 5 It can also be used for a string. :123console.log("Hello World".indexOf("H")); // -&gt; 0 (at position 0)console.log("Hello World".indexOf("h")); // -&gt; -1 ("h" does not exist. Case sensitive!)console.log("Hello World".indexOf("o", 6)); // -&gt; 7 (search from index 6) 4.3.6 slicestring.slice(start, end)12console.log([-1, 0, 1, 2, 3, 0].slice(2, 4)); // -&gt; (2) [1, 2] 包括起始，不包括结尾console.log([-1, 0, 1, 2, 3, 0].slice(2)); // -&gt; (4) [1, 2, 3, 0] 4.3.7 trim()trim: remove whitespace (spaces, newlines, tabs, and similar characters) from the start and end of a string (Not middle!) 只删掉开头和结尾的空白，中间的不动123let str = " Hello World \n";console.log(str); // -&gt; Hello World (+ newline)console.log(str.trim()); // -&gt; Hello World split, join123456let sentence = "Secretarybirds specialize in stomping";let words = sentence.split(" ");console.log(words);// → ["Secretarybirds", "specialize", "in", "stomping"]console.log(words.join(". "));// → Secretarybirds. specialize. in. stomping repeat12console.log("LA".repeat(3));// → LALALA ObjectsObjects can have many properties.Notes: 1) it is defined with a curly bracket and a semicolon {}; 2) each property follows by a colon : 3) use a comma , to separate properties 4) if the property is not a single word, it has to be quoted “” 123456789let person = &#123; first_name: "Tracy", last_name: "Yang", hobbies: ["Reading", "Writing", "Cooking"], "studied subjects": "Web technology"&#125;;console.log(person.first_name); // -&gt; Tracyperson.age = 23;console.log(person.age); // -&gt; 23 delete, indelete: delete a propertyin: return true if the object has this property, otherwise false1234delete person.age;console.log(person.age); // -&gt; undefinedconsole.log("first_name" in person); // -&gt; trueconsole.log("age" in person); // -&gt; false Object.assign() Copy all properties from one object into another. 12345678//let target = Object.assign(target, source);let individual = Object.assign(&#123;&#125;, person);console.log(individual);// -&gt; &#123;first_name: "Tracy", last_name: "Yang", hobbies: Array(3)&#125;let student = &#123;occupation: "student"&#125;;Object.assign(student, person);console.log(student);// -&gt; &#123;occupation: "student", first_name: "Tracy", last_name: "Yang", hobbies: Array(3)&#125; Rest parametersUse three dot to accept all arguments.12345678function max(...numbers) &#123; let result = -Infinity; for (let number of numbers) &#123; if (number &gt; result) result = number; &#125; return result;&#125;console.log(max(4, 1, 9, -2)); // → 9 Or12let numbers = [4, 1, 9, -2];console.log(max(...numbers)); // → 9 Add other elements to compute:123let words = ["never", "fully"];console.log(["will", ...words, "understand"]);// → ["will", "never", "fully", "understand"] JSONThis is an example of JSON data:1234&#123; "squirrel": false, "events": ["work", "touched tree", "pizza", "running"]&#125; JSON.stringify: convert a JS value to JSON stringJSON.parse: parse a JSON string, putting into a JS value or object123456string = JSON.stringify(&#123;squirrel: false, events: ["weekend"]&#125;);console.log(string);// → &#123;"squirrel":false,"events":["weekend"]&#125;console.log(JSON.parse(string).events);// → ["weekend"] RefernceJavaScript reference - MDN web docs]]></content>
      <categories>
        <category>Coding</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Instagram上的复古服装小店 Vintage Shops on Instagram]]></title>
    <url>%2F2018%2F05%2F01%2FInstagram-Vintage-Shops%2F</url>
    <content type="text"><![CDATA[“Hundreds of Instagram accounts dedicated to vintage clothing are driving ultrafast flash sales, and some generate as much as $5000 or more in sales per week.”Reflection and summary from “The Mad Dash To Buy Old Clothes On Instagram” by Alexandra Stratton and Kim Bhasin in the Issue April 30, 2018 Bloomberg Businessweek. Why vintage clothes?IndividualityFrom the clothing perspective, sellers usually only have one piece of each item. So it creates an impression that every item is unique. If the customer does not buy it quickly, it is gone. These one-of-a-kind clothes create a feeding frenzy. They serve well for customers who pursue individuality. (Paragraph 3, 7, 8, 13)大多数卖的衣服是复古风格的。但注意，不是故意做成复古风格。而是有些真的是旧时候的衣服，但现在拿出来成了新潮。由于是旧时候的衣服，现在不生产，数量少。对于追求个性的人来说，真的是再合适不过，根本不怕撞衫。所以很多买家疯狂抢购。(原文第3，7，8，13段) CostsAn other point could be that, there is little cost for storage. If sellers only have one or two pieces of clothes to sell, it is not necessary to pay for a warehouse. So the startup costs are lower comparing to big clothing brands. (Paragraph 9)第二个可能的原因就是成本低。由于每次就卖一两件，根本不用支付仓储的钱。所以省下了很多运行成本。 Why Instagram?FashionInstagram is a well-known place for fashion people showing their personalities. Comparing to Twitter, YouTube and Facebook, Instagram has much more focus on image contents, which are the platform for showing details of clothes. It also have the function for external links. (Paragraph 5, 6)Instagram比推特、油管和脸书更着重图片内容。图片也是常用的展示衣服的方式。（原文第5，6段） Interests FeedThe algorithm of Instagram shifted from chronological feed to users’ interests feed. So the customers are shown by increasing number of vintage clothes. (Paragraph 13)算法推荐改变了。以前是发布时间顺序推荐的，现在是根据用户兴趣推荐。买的越多，首页推荐到的概率就越大。用户不断被这类信息覆盖。（原文第13段）]]></content>
      <categories>
        <category>Business</category>
      </categories>
      <tags>
        <tag>Bloomberg Businessweek</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Biggest Starbucks in Shanghai 星巴克全球最大的门店 —— “上海烘焙工坊”]]></title>
    <url>%2F2018%2F04%2F11%2FBiggest-Starbucks-in-Shanghai%2F</url>
    <content type="text"><![CDATA[“World’s Biggest Starbucks to Open in Shanghai” from Bloomberg [4]全球最大的星巴克开在了上海。为什么星巴克会选择中国？星巴克有哪些销售策略吸引了如此多的忠实顾客？ 星巴克的销售策略海外销售选择成长幅度高的市场原文提到： China is becoming crucial for Starbucks. Same-store sales gained 8 percent in the country during the most recent quarter, compared with 2 percent globally. Revenue from the Asia-Pacific region accounted for almost 15 percent of Starbucks’ revenue for the fiscal year ended in October. That’s up from 5.5 percent five years earlier. 从星巴克官网的财年报告上得知，星巴克店铺销售额在中国成长幅度高达7%，全球整体成长幅度也只有3%。当然选择中国市场继续扩张发展。[2] Global comparable store sales increased 3%…China comp store sales increased 7%… 星巴克作为零售业品牌，注重科技带来的改变大胆应用互联网科技原文提到星巴克和阿里巴巴合作，改革咖啡的购买和运送体验： The coffee chain would be the latest to jump onto the delivery bandwagon in a country where everything from fresh produce to forklifts can be purchased online and delivered the same day. Starbucks is exploring “a range of options” for delivery, said Johnson, who declined to specify when the service might begin. 中国电商发展迅速，在世界上遥遥领先。与美国、英国等零售业市场相比，中国电商领域能提供给星巴克更多的行业发展。不过除此之外，星巴克在美国还有一些独特的互联网服务[1]： 无线充电 Wireless charging 室内定位 Indoor location beacons 物联网咖啡机 The Internet of Things - Clover coffee machines 手机购物 Mobile e-commerce 店内Wi-Fi High-performance wireless data “第四空间 —— 社交网络”星巴克努力运营“第四空间”，即社交网络，比如Facebook，Twitter，Instagram等，国内有微博和微信。在社交网络上可以吸引更多客户，突破了地理限制，比在当地打实体广告更高效、更经济。[3] 积极收回代理权原文提到： Starbucks expanded its investment in China in July, when it announced plans to buy out the partners in its East China joint venture. The company agreed to acquire the remaining 50 percent of the business in a $1.3 billion transaction, giving it ownership of about 1,300 cafes in Shanghai and the Jiangsu and Zhejiang provinces. 在中国，星巴克收回了华东市场合资企业的剩余的50%股份。如此一来，星巴克中国在上海、江苏和浙江就拥有了近1300家咖啡店。这就意味着，星巴克中国的咖啡店变成直营，所有盈利会进入自己的腰包，不会外流。今后的店铺经营也有了100%的自主权。 生词 affluent adj. 富裕的 offset v. 抵消 stagnant adj. 停滞的；不发展的; Starbucks Corp. sees China surpassing the U.S. as its largest market within a decade as it counts on the country’s affluent consumers to offset stagnant growth in the rest of the world. ramp up v. 上升；提高 Ramping up its focus on China, Starbucks is opening its biggest cafe in the world in Shanghai on Wednesday. cavernous adj. 大而空的；像洞穴的 Customers at the cavernous new outlet on the West Nanjing Road shopping strip can watch beans being roasted roll out v. 推出（服务） The roaster also plans to roll out mobile ordering and delivery of drinks and store goods in China sluggish adj. 缓慢的；萧条的 saturate v. 使饱和 adj. 饱和的 The Seattle-based company is homing in on its fastest-growing market as it searches for ways to kick-start sluggish global sales after saturating the U.S. with lattes and cappuccinos. turf n. 草皮（这里指地盘）v. 用草皮覆盖 upmarket adj. 高档的；高级的 (高端市场的) Three years after the company opened its first Roastery on its home turf, Starbucks is testing the larger, upmarket store concept overseas… holding power un. 握力；保持力 It’s obvious to us that the holding power of China for Starbucks is going to be much more significant than the holding power of the U.S. bandwagon n. 时尚；风靡的活动 The coffee chain would be the latest to jump onto the delivery bandwagon in a country where everything from fresh produce to forklifts can be purchased online and delivered the same day. traction n. 牵引；牵引力 The demand for premium products – from autos to yogurt – is gaining traction as an increasing number of Chinese families cross the income threshold to become affluent. in-the-know 有共同语言 For coffee, there’s a certain kind of ‘in-the-know’ from consumers who seek out these good boutique shops.’ 参考资料[1] Forget coffee, Starbucks is a tech company[2] Starbucks Reports Q4 and Full Year Fiscal 2017 Results[3] The ‘Fourth Place’: Starbucks as a technology giant[4] World’s Biggest Starbucks to Open in Shanghai - Bloomberg]]></content>
      <categories>
        <category>Business</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[有感而发：手机应用生态圈]]></title>
    <url>%2F2018%2F04%2F09%2FChina-s-Xiaomi-in-India%2F</url>
    <content type="text"><![CDATA[对于一个手机应用的生态圈(ecosystem of mobile apps)的感想。我对于手机应用的生态圈是又爱又恨的。国产手机应用里，著名的生态圈的例子有腾讯应用生态圈，百度应用生态圈，还有网易应用。比如说腾讯，有QQ，微信，腾讯视频播放器，QQ音乐等等。用户用其中一个应用会经常会安装并使用另外一个应用。多少用户登陆QQ音乐用QQ或者微信登陆？又可以说，多少用户因为用惯了QQ或者微信而选择QQ音乐？当然了，网易云音乐也可以用QQ或者微信登陆，但是QQ音乐却无法用网易邮箱登陆。所以腾讯在QQ音乐用户里全了个圈。 登陆省事情了，不用频繁的注册账号了。一个QQ或者微信用户就搞定了。同时，腾讯还为用户提供了很多小福利。比如著名的王者荣耀和奇迹暖暖游戏，微信QQ用户可以频繁的领一些礼包，虽然是蚊子肉，但是玩家们精打细算，看什么时候能攒够一套五级铭文或者买一套自己喜欢的套装。这种跨应用的连接在腾讯应用里很常见。之前还有QQ用户使用QQ输入法就能比普通用户更快地升级，用户在下载输入法时就会优先选择QQ输入法，毕竟带来了利益，一举两得。 对于这种生态圈的“恨”体现在用户很难从一个生态圈跨入另一个生态圈。比如用惯了QQ音乐，再用网易云音乐可能就需要花时间和精力适应。比如，非常舍不得原app上辛辛苦苦创建的歌单，用户在新app上就需要一首首搜索，添加到自己新创建的歌单中。这是一件繁琐的事情。但是有些生态圈希望吸引用户离开原来的，就会帮助用户转移数据。比如阿里巴巴的虾米音乐，就提供了帮用户从其他音乐类app迁移歌单的功能，可谓“殚精竭虑”。 其实说白了，生态圈的发展还是看用户。用户挑选适合自己的生态圈。对于app的开发商，如何巩固自己的生态圈，防止用户离开非常重要。比如他们可以加大服务力度，争取覆盖用户需求的方方面面；提供更多的小福利，吸引用户长时间使用，增加用户黏度；提高用户离开这个生态圈的成本，包括时间和精力成本。但是这有可能到最后发展成为这样一个局面。只要有一个生态圈开放了迁移数据功能（例如阿里巴巴的虾米音乐），那么其他生态圈也陆续开发了迁移数据功能。因为你吸引我的用户搬到你生态圈，我也可以吸引你的用户搬来我的生态圈啊！这样以来，最终所有生态圈都会有数据迁移。到时候用户的选择还是看那家服务好。说到底还是用户体验的问题。]]></content>
      <categories>
        <category>Business</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[FMCG Financial Management 快消公司财务实力三甲]]></title>
    <url>%2F2018%2F04%2F05%2FFMCG-Financial-Management%2F</url>
    <content type="text"><![CDATA[评估财务实力有哪些指标？三家快消公司——宝洁、高乐氏和高露洁的财务实力为什么那么出色？“Which Companies Excel in the Financial Category of the Management Top 250”, By Ezequiel Minaya, from The Wall Street Journal[9] 德鲁克管理排行 Drucker Institute Company Ranking原文中出现的评估指标 The metrics the Drucker Institute used to assess financial performance include return on assets, return on equity and return on invested capital, common measures of how efficiently a company makes money. Drucker also considered companies’ market share and profits, and the total return for investors in their shares. 德鲁克的有效管理理论 The Management Top 250 ranking, as published in The Wall Street Journal, is based on a holistic measure of corporate “effectiveness” that was developed by the Drucker Institute, a part of Claremont Graduate University in Claremont, Calif. “Effectiveness” is defined as “doing the right things well.” [1] 德鲁克管理排行是用来评估企业“管理有效性”的。“有效性”定义为这个企业是否能“做好正确的事情”。德鲁克管理排行的根据是已故商业大师彼得·德鲁克的理论，全面地评估企业。评估角度包括客户满意度、员工参与和发展、创新、社会责任和财务实力。[3] 其中衡量盈利能力的三个指标为原文提到的return on assets, return on equity and return on invested capital Return on Assets, ROA 资产收益率/资产回报率 [5][11]资产收益率 = 净利润 / 平均资产总额ROA = Net Income / Average Total Assets意义：每单位资产创造多少净利润 Percentage of how profitable a company’s assets are in generating revenue. Reurn on Equity, ROE 股本回报率，产权收益率，产权报酬率 [2][7]股本回报率＝净收入／股东股本（shareholder’s equity）ROE = Net Income / Book Value of Equity意义：每单位股东资本创造多少净利润 How well a company uses investments to generate earnings growth. return on capital, ROC 资本回报率 [6][10]Return on capital (ROC) is the same as return on invested capital (ROIC).资本回报率 = （净收入 - 税收）/ 总资本ROC = (NetOperatingProfit - AdjustedTax) / InvestedCapital意义：每单位资本创造多少利润 A measure of the profitability and value-creating potential of companies after taking into account the amount of initial capital invested. P&amp;G举例P&amp;G股价为$78.77[4]。公司配给股利(Dividend)在2018年1月9日宣布为$0.6896[8]。收益率为0.6896 / 78.77 = 0.88%。比美国银行平均的年利率（0.04% - 0.08%）高很多[1]。 资本收益（capital gain）: 股票涨价后卖掉赚的钱。假设涨到了98.77，那么资本收益就是20元。 股票回购（shares buybacks）：企业自己买回流通的股票，从而提高了单股股利(earnings per share, EPS)。 EPS：EPS = 净利润 / 股数。当净利润不变时，减少股数也就提高了每股的价值。当股价变高的时候，再卖掉股票，那么收益也就变高了。 通过降低成本来提高利润 The consumer-products companies have been hard pressed to boost sales growth while facing increased competition and shifting consumer tastes. 原文提到，快消公司面临收入难以提高的现状，同时市场竞争加剧，顾客的口味也难以捉摸。既然提高收入很难，那么可以从成本的角度来切入。降低陈本也是变相的提高了利润。原文中提到了五种控制成本的方法。 Senior CFO: “good at cost-cutting” 资深CFO懂得如何控制成本 Those long terms of employment make the finance leaders at these companies good at cost-cutting, says Peter Crist, chairman of executive-search firm Crist|Kolder Associates. “They know how to pull the levers,” he says. Narrow the focus: remove some infamous brands can save money for advertising, products overlapping and competition. 重点关注主要品牌，减少次要品牌的开销，例如其广告成本，人力成本和竞争压力。 P&amp;G in recent years has narrowed its focus, cutting back from more than 100 brands to 65, in hopes of speeding revenue growth and reversing market-share erosion, says finance chief Jon Moeller. Job cuts 裁员 The 180-year-old company, ranked No. 4 for financial strength by Drucker, has cut some 20,000 jobs between 2012 and 2016, while trimming $10 billion in costs. Streamline the supply chain 精简供应链 Streamline bureaucracy 消除官僚主义 Company leaders have vowed to cut an additional $10 billion by 2021, mostly by streamlining their supply chain and bureaucracy, and focusing efforts on top brands. 生词 under siege 被包围 slump 衰退 stalwart 忠诚的；忠实的；健壮的；强壮的 Consumer-goods companies may be under siege from slumping sales and aggressive activist investors, but three of the industry’s stalwarts—Procter &amp; Gamble Co., Clorox Co. and Colgate-Palmolive Co…. churn out 大量生产 These companies excel at churning out profit and putting their cash to good use. tenure 任期 Each has a chief financial officer who has been with the company at least a quarter-century, with Colgate CFO Dennis Hickey serving the longest tenure, at 40 years. pull the lever 拉动操纵杆 Those long terms of employment make the finance leaders at these companies good at cost-cutting, says Peter Crist, chairman of executive-search firm Crist|Kolder Associates. “They know how to pull the levers,” he says. erosion 腐蚀，侵蚀 P&amp;G in recent years has narrowed its focus, cutting back from more than 100 brands to 65, in hopes of speeding revenue growth and reversing market-share erosion, says finance chief Jon Moeller. trim 修剪；修整 The 180-year-old company, ranked No. 4 for financial strength by Drucker, has cut some 20,000 jobs between 2012 and 2016, while trimming $10 billion in costs. bureaucracy 官僚主义 Company leaders have vowed to cut an additional $10 billion by 2021, mostly by streamlining their supply chain and bureaucracy, and focusing efforts on top brands. 参考资料[1] Average Bank Interest Rates in 2018: Checking, Savings, Money Market, and CD Rates - ValuePenguin[2] 股本回报率 - 智库百科[3] METHODOLOGY FOR THE DRUCKER INSTITUTE’S COMPANY RANKINGS[4] Procter &amp; Gamble Co. - MarketWatch[5] Return on assets - Wikipedia[6] Return on capital - Wikipedia[7] Return on equity - Wikipedia[8] Splits &amp; Dividend History - pginvestor[9] Which Companies Excel in the Financial Category of the Management Top 250 - Wall Street Journal[10] 资本回报率 - 智库百科[11] 资产收益率 - 智库百科]]></content>
      <categories>
        <category>Business</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Corporate Finance 苹果公司的财务部门]]></title>
    <url>%2F2018%2F04%2F02%2FThe-Finance-Arm-of-Apple%2F</url>
    <content type="text"><![CDATA[“Apple should shrink its finance arm before it goes bananas”, from economist.com.[2] 苹果财务面临三方面的风险 Risks in 3 ways高风险投资 Invest in Risky Assets2011年苹果主要投资无风险的资产，例如现金和政府债券。而现在主要是企业债券。尽管这些企业债券属于 投资等级（investment grade)，但是还是比过去风险大。不过，风险高带来的收益也高。这也就能解释为什么苹果的投资组合（portfolio）的年收益率（2%）高于其他硅谷公司微软，Alphabet，思科和甲骨文。 投资等级是指对债券（公司）或股票（公司）的一种分类分级[1]。国际上三大信用评级机构为Standard &amp; Poor’s标普，Moody’s 穆迪以及惠誉Fitch。评级的目的是评估需要借钱的债务人按期偿还本金及利息的能力及意愿。评级越高，信用越高，代表还钱的能力和意愿高。[1][4][5][6]投资风险高的债券，有可能债务人不还钱，那么到时候苹果就会面临巨额亏损。 金融衍生品 Profit from Derivatives因为每年子公司们都要将盈余上交给母公司，而苹果许多的子公司在国外。盈余返回在美国的母公司时，就要考虑汇率的问题。因为汇率会波动，所以或多或少会出现亏损。为了降低这部分亏损，苹果可以和银行签订衍生性金融商品交易合约，在上交时按照固定汇率来交易，这样就降低了汇率波动带来的影响。在2015年，这部分金融衍生品就产生了40亿美元（$4bn)，是苹果总投资组合利润的6%。然而与此同时，这也存在风险。因为这样做的风险价值（Value at Risk）高达4.34亿美元。也就是说，假如合约的银行不履行合约，那么苹果就每天损失4.34亿美元。原文提到，尽管损失的钱大致可以和苹果基础业务的利润相抵消，但是这些金融衍生品规模如此巨大，其影响不可小觑。 避税 Tax Avoidance由于美国高达35%的海外收益汇回税，苹果想办法利用海外分公司赚钱，而美国本土的苹果公司负债累累。著名的“双层爱尔兰夹荷兰三明治“ （Double Irish with Dutch sandwich）就是说的苹果公司利用国外的政策来合理避税的架构[3]。苹果公司在美国境内负债920亿美元。因为债务很多，发债利率每提高一点，就会让苹果公司支出很多利息。但是如果不提高利率，又会有谁来买苹果公司的债券呢？如果在美国无法筹到，就要从海外调钱来。那么这时候，就有昂贵的海外收益汇回税等着苹果交了。 总结 New Words Goldman Sachs 高盛 n. But it (Apple) has also grown a financial operation that is already, on some measures, roughly half the size of Goldman Sachs. subsidiary 子公司 n. lump 使集中 v. Apple does not organise its financial activities into one subsidiary, but Schumpeter has lumped them together. asset （经济）资产 n. security （经济）证券 n. The result—call it “Apple Capital”—has $262bn of assets, $108bn of debt, and has traded $1.6trn of securities since 2011. scrutiny 审视 n. It appears to be run fairly cautiously and is part of a thriving firm, but it still deserves scrutiny. derivative （经济）衍生品 n. gyration 旋转 n. （这里指波动） Apple Capital also uses derivatives in order to protect the firm against currency and interest-rate gyrations. bond （经济）债券 n. And it manages America’s fifth-biggest corporate-debt pile by issuing Apple bonds as part of an elaborate strategy to limit tax bills. leverage （经济）杠杆率 n. Apple Capital is different from these firms in important ways. It does not take deposits and has much lower leverage.杠杆率一般是指权益资本与资产负债表中总资产的比率。杠杆率是一个衡量公司负债风险的指标，从侧面反映出公司的还款能力。高杠杆率意味着在经济繁荣阶段，金融机构能够获得较高的权益收益率，但当市场发生逆转时，将会面临收益大幅下降的风险。 racy 有活力的 adj. credit risk （经济）信贷风险 n. Apple Capital is investing in racier assets, which involves taking credit risk. face value （经济）票面价值 n. Since 2011 its notional size—the face value of its contracts—has risen by 425%, to $124bn. Value at Risk (VaR) 风险价值 n. Apple says that its “value-at-risk” (VAR), a statistical measure of the maximum likely loss in an average day, is $434m.资产组合在持有期间内由于市场价格变动所导致的最大预期损失的数值。 sheer size 巨大的规模 In theory losses on derivatives would be offset by gains in the value of Apple’s underlying business. But the sheer size of these positions gives pause for thought. levy 征（税） repatriate 遣送回国 v. 被送回本国的人 n. That way Apple does not pay the 35% levy America charges when earnings are repatriated. grind their teeth at night 寝不安席，心事重重 By then financial regulators, who do not supervise Apple, will be grinding their teeth at night. 参考资料[1]About Moody’s Ratings: Ratings Definitions - Moody’s[2]Apple should shrink its finance arm before it goes bananas[3]苹果避税740亿美元，三明治手法大公开–财经–人民网[4]Fitch Rating Definitions[5]S&amp;P Global Ratings Definitions[6]投资等级- MBA智库百科]]></content>
      <categories>
        <category>Business</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Retail Versus E-Commerce]]></title>
    <url>%2F2018%2F03%2F30%2FRetail-Versus-E-Commerce%2F</url>
    <content type="text"><![CDATA[美国实体零售店对抗电商亚马逊的三种方法Three methods that retails stop Amazon from killing stores. Method 1. Controlling costs That’s because a dollar saved is a dollar earned in profit, whereas a dollar raised in revenue only increases profit by a percentage (the profit margin). Method 2. Becoming a destinationOnline shops are not able to provide physically shopping experience. If retailers can focus on experience-oriented shops, they can attract customers. Method 3. DifferentiationOnline shops have costs in shipping. I remember the high shipping cost when we bought IKEA furnitures. If retailers can satisfy customers’ needs without asking for shipping cost, they have advantages over e-commerce. Examples ReferencesHow to stop Amazon from killing your store]]></content>
      <categories>
        <category>Business</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[读书笔记：《创京东》第一部分 第二章 试水电商]]></title>
    <url>%2F2018%2F03%2F29%2Fjd-s1c2%2F</url>
    <content type="text"><![CDATA[1999年，中国零售业关心线下连锁店，并不关心电商。1999年，中国出现了很多大型连锁超市，例如苏宁和国美。中国零售业重点发展线下连锁店，对电商并不感兴趣。线下连锁店巅峰时期为2004年，国美、苏宁上市，并购其他公司。1999年的同时，互联网电商萌芽。有易趣网，类似于eBay。还有当当网、卓越网，类似于亚马逊。同年马云创建阿里巴巴，聚拢中国外贸商家。而此时，刘强东在研究库存与采购，对电商和互联网并不特别关心。转折点发生在2003年非典时期。这时候客户不愿意见面交易，大量库存堆积如山，京东持续亏损。解决办法是通过网上论坛获取订单，最后成功清理库存，打开光磁市场。这导致刘强东对互联网和电商有了兴趣，开始做独立网站卖产品。]]></content>
      <categories>
        <category>Reading</category>
      </categories>
      <tags>
        <tag>创京东</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Vertical Integration: AT&T-Time Warner]]></title>
    <url>%2F2018%2F03%2F28%2FVertical-Integration-AT-T-Time-Warner%2F</url>
    <content type="text"><![CDATA[纵向合并 - AT&amp;T和时代华纳Learned about vertical integration in article “Why the AT&amp;T-Time Warner Merger Makes Sense” by MICHAEL J. SANTORELLI from The New York Times. 文章核心思想AT&amp;T和时代华纳合并属于纵向合并，没有垄断的隐患。而政客们却竭力反对。作者提议应该把更多精力放在监管那些领头IT公司，比如谷歌和Facebook。因为他们的影响力大到能影响总统选举，还重新定义了人们交流互动的方式。这些才是真正威胁到行业竞争和消费者权益的。 纵向合并与横向合并的差别 纵向合并是同一制造的价值链上，负责不同层次的业务的公司的合并。（不存在竞争关系） 横向合并是生产相同或相似产品的公司的合并。（以前存在竞争关系）举例 反垄断法保护消费者利益 反垄断法 (Antitrust laws, competition laws) 立法用意：阻止行业领头企业横向兼并，最后形成一家独大的局面(monoply)。保护消费者权益。 AT&amp;T和时代华纳合并是纵向合并。AT&amp;T是美国固定和移动电话服务商(Telecommunications)。时代华纳是娱乐传播集团(Entertainment)，旗下有HBO，CNN等。两个企业属于不同的行业领域，不存在垄断。 参考文章Why the AT&amp;T-Time Warner Merger Makes Sense]]></content>
      <categories>
        <category>Business</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Day 9: Recursion]]></title>
    <url>%2F2018%2F03%2F26%2FDay-9-Recursion%2F</url>
    <content type="text"><![CDATA[Review recursion in Java with examples.Recursion is a method that calls itself. The key points to use a recursion is to identify the base case and the recursive case. Common ExampleFactorial1234567//Calculate N!public int factorial(int n) &#123; if(n == 1) //this is the base case return n; else return n*factorial(n-1); //this is the recursive case&#125; 12input: 3output: 6 (1*2*3) Fibonacci1234567891011public int fibonacci(int n) &#123; //two base cases if(n == 0) return 0; if(n == 1) return 1; //recursive case else return fibonacci(n-1) + fibonacci(n-2);&#125; Bunny Ears12345678910public int bunnyEars2(int bunnies) &#123; if(bunnies == 0) return 0; if(bunnies == 1) return 2; if(bunnies %2 == 0) //even return bunnyEars2(bunnies -1 ) + 3; else return bunnyEars2(bunnies - 1) + 2;&#125; 等差数列 Arithmetic Progression12345678public int triangle(int rows) &#123; if(rows == 0) return 0; if(rows == 1) return 1; else return triangle(rows-1) + rows;&#125; Sum of each digit 各个位数之和123456public int sumDigits(int n) &#123; if(n &lt; 10) return n; else return n%10 + sumDigits(n/10);&#125; Reverse a string123456public static String reverse(String str) &#123; if ((null == str) || (str.length() &lt;= 1)) &#123; return str; &#125; return reverse(str.substring(1)) + str.charAt(0);&#125; Two Methods of String substring(int beginIndex) Returns a new string that is a substring of this string. charAt(int index) Returns the char value at the specified index. Examples 123String input = "String";System.out.println(input.substring(1)); //tringSystem.out.println(input.charAt(0)); //S References:Class StringReversing a String with Recursion in Java]]></content>
      <categories>
        <category>Coding</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>30 Days of Code</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[读书笔记：《创京东》第一部分 第一章 柜台起家]]></title>
    <url>%2F2018%2F03%2F25%2Fjd-s1c1%2F</url>
    <content type="text"><![CDATA[“正品、低价、好服务”。1998年6月18日, 京东多媒体——京东的前身成立了。 京东多媒体 典型的线下渠道生意：在柜台进货、卖货，先做批发，后转零售。 背景：北京中关村 暴利、混乱、无秩序、充满欺诈和贪腐。…正品与山寨货齐飞。 业务： 前期：婚纱影楼视频编辑的硬件和系统 后期：光磁产品、刻录机和录像带转制系统。70% 卖给中关村各电脑城柜台，30% 经由柜台卖给个人 发展： 2011年，北京中关村太平洋数码城倒闭。京东商城交易额超过300亿元，成为中国自营B2C电商老大。 经验总结]]></content>
      <categories>
        <category>Reading</category>
      </categories>
      <tags>
        <tag>创京东</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Day 0: Hello World]]></title>
    <url>%2F2018%2F03%2F25%2FDay-0-Hello-World%2F</url>
    <content type="text"><![CDATA[Scanner basic functions. Scanner基础。 Day 0: Hello WorldRead from stdin:1Scanner scan = new Scanner(System.in); Read next:1234scan.next(); // returns the next token of inputscan.hasNext(); // returns true if there is another token of input (false otherwise)scan.nextLine() // returns the next LINE of inputscan.hasNextLine(); // returns true if there is another line of input When finish reading, close it to avoid a resource leak.1scan.close(); Example1234Scanner scan = new Scanner(System.in); // open scannerString s = scan.next(); // read the next token and save it to 's'scan.close(); // close scannerSystem.out.println(s); // print 's' to System.out, followed by a new line Reference: Day 0: Hello, World.]]></content>
      <categories>
        <category>Coding</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>30 Days of Code</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Day 1: Data Types]]></title>
    <url>%2F2018%2F03%2F25%2FDay-1-Data-Types%2F</url>
    <content type="text"><![CDATA[Scanner functions and examples. Scanner 注意事项和例子 Day 1: Data TypesDifferent data type uses different reading methods.123int a = scan.nextInt(); //read next intdouble b = scan.nextDouble(); //read next doubleString c = scan.nextLine(); //read next line as String nextInt(), nextDouble() methods do not consume \nFor example (This does not work.)12345678910111213int i = 4;double d = 4.0;String s = "HackerRank ";Scanner scan = new Scanner(System.in);/* Read and save an integer, double, and String to your variables.*/int a = scan.nextInt();double b = scan.nextDouble();String c = scan.nextLine();System.out.println(a + i);System.out.println(b + d);System.out.println(s + c); //only print s Input:12355.0test Output:1299.0 It is not able to reach the string input. Because nextInt(); reads the integer, but not the “\n”. Then nextLine() reads “\n”, and treats it as the input for c.The input with \n is1235\n5.0\ntest\n 因为nextInt()读入一个整数，但是不会读入这个整数后面的换行符\n。而这时nextLine()开始读，读到了换行符，这个换行符是之前那个整数后面的换行符。nextLine()继续这一行，发现换行符后面没东西了，所以返回了换行而已，并没有接下去读“test”。Solution:1234//Now each read consumes \nint a = Integer.parseInt(scan.nextLine());double b = Double.parseDouble(scan.nextLine());String c = scan.nextLine(); Summary Different data type uses different reading methods. nextInt(), nextDouble() do not consume \n. Reference:Scanner is skipping nextLine() after using next() or nextFoo()?Day 1: Data Types]]></content>
      <categories>
        <category>Coding</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>30 Days of Code</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Day 2: Operators]]></title>
    <url>%2F2018%2F03%2F25%2FDay-2-Operators%2F</url>
    <content type="text"><![CDATA[Math.round() Day 2: OperatorsMath.round() returns a double123double percent = (tip_percent + tax_percent)/100.0;int total = (int)Math.round(meal_cost * (1 + percent));System.out.println("The total meal cost is " + total + " dollars."); To Do: Round to 2 decimals In other languages]]></content>
      <categories>
        <category>Coding</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>30 Days of Code</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Day 8: Maps]]></title>
    <url>%2F2018%2F03%2F25%2FDay-8-Maps%2F</url>
    <content type="text"><![CDATA[Functions and examples in Map data structure. Map数据结构常用方法和例子。 Map简单方法存储键值对，一对一对存，而且要保证键的唯一性，无序 添加 12put(K key, V value)，返回这个键对应的原来的值。同样的键，新值会覆盖旧值。putAll(Map&lt;? extends K,? extends V&gt; m) 删除 12clear()remove(Object key) 判断 123containsValue(Object value)containsKey(Object key)isEmpty() 获取 123get(Object key)size()values() !– HashTable：底层是哈希表数据结构，不可以存入null键和null值的情况。该集合是线程同步的，效率低!– HashMap：底层是哈希表数据结构，允许使用null键null值。线程不同步，效率高!– TreeMap：底层是二叉树数据结构，线程不同步，可以给map集合中的键排序Set集合底层使用了Map集合 Demo11234567891011121314151617181920212223242526272829303132import java.util.*;class MapDemo&#123; public static void main(String[] args) &#123; Map&lt;String, String&gt; map = new HashMap&lt;String, String&gt;(); //添加元素, 返回这个键对应的原来的值。同样的键，新值会覆盖旧值。 System.out.println("put 01-apple: " + map.put("01", "apple")); //put 01-apple: null System.out.println("put 01-new apple: " + map.put("01", "new apple")); //put 01-new apple: Mike map.put("02", "banana"); map.put("03", "grape"); //判断 System.out.println("containsKey: " + map.containsKey("02")); //return true //获取：可以通过get返回值是否为空来判断键是否存在 System.out.println("get: " + map.get("02")); //return banana System.out.println("get: " + map.get("022")); //return null //获取map中所有的值 Collection&lt;String&gt; coll = map.values(); //删除 System.out.println("remove: " + map.remove("02")); //return banana System.out.println("remove: " + map.remove("022")); //return null //打印 System.out.println(map); //&#123;01=new apple, 03=grape&#125; System.out.println(coll); //[new apple, grape] &#125;&#125; 重点：两种取出方法 entrySet() Returns a Set view of the mappings contained in this map Set&lt;Map.Entry&lt;K,V&gt;&gt; keySet() Returns a Set view of the keys contained in this map. Set 取出所有的键到Set中，通过迭代方式取出所有的键，然后再get获取每一个键对应的值图示keySet()Demo2123456789101112131415161718192021222324252627282930import java.util.*;class MapDemo2&#123; public static void main(String[] args) &#123; Map&lt;String, String&gt; map = new HashMap&lt;String, String&gt;(); map.put("01", "apple"); map.put("02", "banana"); map.put("03", "grape"); map.put("04", "pear"); //先获取所有键的集合 //Set&lt;键的类型&gt; 集合名字 = map.keySet() Set&lt;String&gt; fruitKeySet = map.keySet(); //获取Set迭代器 Iterator&lt;String&gt; it = fruitKeySet.iterator(); while(it.hasNext())&#123; String key = it.next(); System.out.println("Fruit key: " + key + " "); //Fruit key: 01 Fruit key: 02 Fruit key: 03 Fruit key: 04 //有了键就可以用Map的get()获取值 String value = map.get(key); System.out.println(key + "--" + value); //01--apple 02--banana 03--grape 04--pear &#125; &#125;&#125;]]></content>
      <categories>
        <category>Coding</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>30 Days of Code</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Market Size 市场估计问题]]></title>
    <url>%2F2018%2F03%2F19%2FMarket-Size-%E5%B8%82%E5%9C%BA%E4%BC%B0%E8%AE%A1%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[讨论市场估计问题中的两个类型：问具体数字；问服务的次数，并分别举例说明运算逻辑和过程。 分类参考资料：market size 估算的一类问题应该怎么思考？ - 林梓默的回答 - 知乎根据这个回答，分为两种问题。 第一种：问具体数字。电商一年卖多少本书？ 第二种：问服务的次数。北京多少加油站？ 公式 第一种问题考虑角度：供应/需求 （Supply/Demand)从需求角度：数量 = 消费人群 × 消费频率 × 单位时间 第二种考虑角度：数量 =（单位时间内）服务的总次数 ÷ 频 举例第一种举例：电商一年大约卖多少本书？公式：书总数量（本）= ①用户总数（人）× ②书数量（本/人/年）× 1（年） 消费人群：电商用户（未知） 消费频率：一位电商用户一年买书的数量（未知） 单位时间：一年（已知） 简单来看：假设电商只有1位用户，这位用户每月买1本书。那么在一年内（12个月），这位用户买了 12 × 1 = 12 本书。也就是说，电商这一年内卖出了12本书，因为它只有这一位用户。（很简单的情况） 分步： 电商有多少用户？① 电商用户总数 = 中国网民总数 x 电商网站的市场比例 中国网民总数 = 7亿 = 7 × 10^8 （人） 假设 电商网站的市场比例 = 30% 则 ① 电商用户总数 = 7 × 10^8 × 30% = 2.1 × 10^8 （人） 一位电商用户一年买书的数量？② 一位电商用户一年买书的数量 = 一位电商用户一月买书的数量 × 12 （月） 假设平均每人每月买0.5本，即两个月买一本（因为现在人们很少买书了╮(╯▽╰)╭） 则 ② 书数量（本/人/年）= 书数量（本/人/月）× 12（月/年）= 0.5 × 12 = 6（本/人/年） 单位时间 = 1 年 结论结合 ①②： 书总数量（本）= 用户总数（人）× 书数量（本/人/年）× 1（年） 书总数量（本）= 2.1 × 10^8 × 6 × 1 = 1.26 × 10^9 （本）即：电商一年大约卖12.6亿本书。 第二种举例：美国有多少加油站？公式：加油站总数（个） = ①（单位时间内）汽车加油总次数（次）÷ ②（单位时间内）每个加油站加油总次数（次/个）简单来看，一天24小时中，假设全国汽车总共加油了10次，每个加油站在这天内总共被使用了5次，那么全国有10 ÷ 5 = 2 个加油站。 分步：以下计算都是在单位时间内，单位时间是10天 单位时间内，全国总共加油多少次？① 汽车加油总次数（次）= 加油次数（次/辆）× 汽车总数（辆） 加油次数（次/辆）：假设一辆车平均10天加一次油。即单位时间 = 10天，加油次数 = 1（次/辆/10天） 汽车总数（辆） 以家庭为单位，汽车总数（辆）= 汽车数量（辆/家）× 家庭数量（家） 假设每家平均1.5辆车。 每5人算一个家庭。美国人口约为3亿，则家庭数量 = 美国人口（人）÷ 5（人/家）= 3 × 10^8 ÷ 5 = 6 × 10^7 （家） 则汽车总数（辆） = 汽车数量（辆/家）× 家庭数量（家）= 1.5 × 6 × 10^7 = 9 × 10^7（辆） 所以：① 汽车加油总次数（次）= 加油次数（次/辆）× 汽车总数（辆）= 1 × 9 × 10^7 = 9 × 10^7（次） 单位时间内，每个加油站加油总次数？意思就是，假设一个加油站里有一台加油机，这台加油机每1小时被使用一次，一天有24小时，那么它这天总共被使用了24次。这个加油站也就被使用了24次。注意使用概率：并不是全国所有加油站都有机会被使用。偏远地区使用频率很低。所以这里假设有每个加油站有80%的概率被光顾。 ② 每个加油站加油总次数（次/个）= 使用概率 × 加油机数量（台/个）× 使用次数（次/台/天） 假设使用概率为80% 假设每个加油站有6台加油机。 假设每3小时一台加油机被使用一次，则一天24小时中这台加油机被使用了8次（24/8=3） 所以 ② 每个加油站加油总次数（次/个）= 使用概率 × 加油机数量（台/个）× 使用次数（次/台/天）= 80% × 6 × 8 = 38.4（次/个/天） 单位时间内，每个加油站加油总次数为38.4 × 10（天）= 384 ≈ 400（次/个） 结论结合 ①②：加油站总数（个） = ①（单位时间内）汽车加油总次数（次）÷ ②（单位时间内）每个加油站加油总次数（次/个）加油站总数（个）= 9 × 10^7 ÷ 400 = 2.25 × 10^5 = 225,000（个）即：美国大约有22.5万个加油站。​网上查到资料说美国大概有168,000个加油站（2004），数量级是一致的。]]></content>
      <categories>
        <category>Case Study</category>
      </categories>
      <tags>
        <tag>Market Size</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo and Theme]]></title>
    <url>%2F2018%2F03%2F19%2FHexo-Common-Commands%2F</url>
    <content type="text"><![CDATA[Hexo and theme changes. Create a new post 创建一个新的文章$ hexo new &quot;new post&quot; View site static 发布前预览$ hexo s Clean cache file 清理缓存（如果修改了格式）$ hexo clean Generate and deploy files 发布hexo g -d Change header image/Users/zhiyuyang/Documents/Blog/testBlog/themes/next/source/css/_custom]]></content>
  </entry>
</search>
